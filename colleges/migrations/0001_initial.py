# Generated by Django 2.1.7 on 2019-05-28 23:35

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AcademyInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='学院名称')),
                ('academyId', models.IntegerField(unique=True, verbose_name='学院编号')),
                ('majorNum', models.PositiveIntegerField(verbose_name='专业数量')),
                ('teacherNum', models.PositiveIntegerField(verbose_name='教职工数量')),
                ('studentNum', models.PositiveIntegerField(verbose_name='学生数量')),
            ],
            options={
                'verbose_name': 'academyInfo',
                'verbose_name_plural': 'academyInfos',
                'ordering': ['-academyId'],
            },
        ),
        migrations.CreateModel(
            name='ClassInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('classId', models.IntegerField(unique=True, verbose_name='班级编号')),
                ('studentNum', models.PositiveIntegerField(verbose_name='学生数量')),
            ],
            options={
                'verbose_name': 'classInfo',
                'verbose_name_plural': 'classInfos',
                'ordering': ['-classId'],
            },
        ),
        migrations.CreateModel(
            name='CollegeInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='学校名称')),
                ('collegeId', models.IntegerField(unique=True, verbose_name='学校编号')),
                ('description', models.CharField(max_length=200, verbose_name='学校简介')),
                ('address', models.TextField(blank=True, max_length=200, verbose_name='地址')),
                ('level', models.IntegerField(choices=[(1, '双一流'), (2, '一本'), (3, '二本'), (4, '三本'), (5, '专科')], verbose_name='学校级别')),
                ('area', models.PositiveIntegerField(null=True, verbose_name='面积')),
                ('birthday', models.DateField(verbose_name='建校时间')),
                ('headmaster', models.CharField(max_length=20, verbose_name='校长')),
                ('academyNum', models.PositiveIntegerField(verbose_name='学院数量')),
                ('majorNum', models.PositiveIntegerField(verbose_name='专业数量')),
                ('teacherNum', models.PositiveIntegerField(verbose_name='教职工数量')),
                ('studentNum', models.PositiveIntegerField(verbose_name='学生数量')),
            ],
            options={
                'verbose_name': 'collegeInfo',
                'verbose_name_plural': 'collegeInfos',
                'db_table': 'collegeInfo',
                'ordering': ['-collegeId'],
                'get_latest_by': 'collegeId',
                'abstract': False,
                'managed': True,
                'default_permissions': ('add', 'change', 'delete'),
            },
        ),
        migrations.CreateModel(
            name='GradeInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gradeId', models.IntegerField(unique=True, verbose_name='年级编号')),
                ('classNum', models.PositiveIntegerField(verbose_name='班级数量')),
                ('teacherNum', models.PositiveIntegerField(verbose_name='教职工数量')),
                ('studentNum', models.PositiveIntegerField(verbose_name='学生数量')),
            ],
            options={
                'verbose_name': 'gradeInfo',
                'verbose_name_plural': 'gradeInfos',
                'ordering': ['-gradeId'],
            },
        ),
        migrations.CreateModel(
            name='MajorInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=20, verbose_name='专业名称')),
                ('majorId', models.IntegerField(unique=True, verbose_name='专业编号')),
                ('gradeNum', models.PositiveIntegerField(verbose_name='年级数量')),
                ('classNum', models.PositiveIntegerField(verbose_name='班级数量')),
                ('teacherNum', models.PositiveIntegerField(verbose_name='教职工数量')),
                ('studentNum', models.PositiveIntegerField(verbose_name='学生数量')),
                ('ownerAcademy', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colleges.AcademyInfo', verbose_name='所属学院')),
            ],
            options={
                'verbose_name': 'majorInfo',
                'verbose_name_plural': 'majorInfos',
                'ordering': ['-majorId'],
            },
        ),
        migrations.CreateModel(
            name='StudentInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('studentId', models.IntegerField(unique=True, verbose_name='学号')),
                ('name', models.CharField(max_length=20, verbose_name='姓名')),
                ('namePinYin', models.CharField(max_length=20, verbose_name='姓名拼音')),
                ('idCardNum', models.CharField(max_length=20, verbose_name='身份证号')),
                ('age', models.IntegerField(verbose_name='年龄')),
                ('year_in_college', models.DateTimeField(verbose_name='入学年份')),
                ('height', models.IntegerField(verbose_name='身高')),
                ('weight', models.IntegerField(verbose_name='体重')),
                ('bust', models.IntegerField(verbose_name='腰围')),
                ('waist', models.IntegerField(verbose_name='腰围')),
                ('hips', models.IntegerField(verbose_name='臀围')),
                ('hobbies', models.CharField(max_length=200, verbose_name='爱好')),
                ('married', models.BooleanField(verbose_name='婚姻状态')),
                ('ownerClass', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colleges.ClassInfo', verbose_name='所属班级')),
            ],
            options={
                'verbose_name': 'studentInfo',
                'verbose_name_plural': 'studentInfos',
                'ordering': ['-studentId'],
            },
        ),
        migrations.AddField(
            model_name='gradeinfo',
            name='ownerMajor',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colleges.MajorInfo', verbose_name='所属专业'),
        ),
        migrations.AlterIndexTogether(
            name='collegeinfo',
            index_together={('name', 'collegeId')},
        ),
        migrations.AddField(
            model_name='classinfo',
            name='ownerGrade',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colleges.GradeInfo', verbose_name='所属年级'),
        ),
        migrations.AddField(
            model_name='academyinfo',
            name='ownerCollege',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='colleges.CollegeInfo', verbose_name='所属学校'),
        ),
        migrations.AlterIndexTogether(
            name='studentinfo',
            index_together={('name', 'studentId')},
        ),
        migrations.AlterIndexTogether(
            name='majorinfo',
            index_together={('name', 'majorId')},
        ),
        migrations.AlterIndexTogether(
            name='academyinfo',
            index_together={('name', 'academyId')},
        ),
    ]
